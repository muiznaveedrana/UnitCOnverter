{"ast":null,"code":"export const unitCategories = {\n  length: {\n    name: 'Length',\n    units: {\n      meter: {\n        name: 'Meter',\n        symbol: 'm',\n        factor: 1\n      },\n      kilometer: {\n        name: 'Kilometer',\n        symbol: 'km',\n        factor: 1000\n      },\n      centimeter: {\n        name: 'Centimeter',\n        symbol: 'cm',\n        factor: 0.01\n      },\n      millimeter: {\n        name: 'Millimeter',\n        symbol: 'mm',\n        factor: 0.001\n      },\n      micrometer: {\n        name: 'Micrometer',\n        symbol: 'μm',\n        factor: 0.000001\n      },\n      nanometer: {\n        name: 'Nanometer',\n        symbol: 'nm',\n        factor: 0.000000001\n      },\n      inch: {\n        name: 'Inch',\n        symbol: 'in',\n        factor: 0.0254\n      },\n      foot: {\n        name: 'Foot',\n        symbol: 'ft',\n        factor: 0.3048\n      },\n      yard: {\n        name: 'Yard',\n        symbol: 'yd',\n        factor: 0.9144\n      },\n      mile: {\n        name: 'Mile',\n        symbol: 'mi',\n        factor: 1609.344\n      },\n      nauticalMile: {\n        name: 'Nautical Mile',\n        symbol: 'nmi',\n        factor: 1852\n      },\n      angstrom: {\n        name: 'Angstrom',\n        symbol: 'Å',\n        factor: 0.0000000001\n      },\n      lightYear: {\n        name: 'Light Year',\n        symbol: 'ly',\n        factor: 9.461e15\n      },\n      parsec: {\n        name: 'Parsec',\n        symbol: 'pc',\n        factor: 3.086e16\n      }\n    }\n  },\n  mass: {\n    name: 'Mass/Weight',\n    units: {\n      kilogram: {\n        name: 'Kilogram',\n        symbol: 'kg',\n        factor: 1\n      },\n      gram: {\n        name: 'Gram',\n        symbol: 'g',\n        factor: 0.001\n      },\n      milligram: {\n        name: 'Milligram',\n        symbol: 'mg',\n        factor: 0.000001\n      },\n      microgram: {\n        name: 'Microgram',\n        symbol: 'μg',\n        factor: 0.000000001\n      },\n      tonne: {\n        name: 'Tonne',\n        symbol: 't',\n        factor: 1000\n      },\n      pound: {\n        name: 'Pound',\n        symbol: 'lb',\n        factor: 0.453592\n      },\n      ounce: {\n        name: 'Ounce',\n        symbol: 'oz',\n        factor: 0.0283495\n      },\n      stone: {\n        name: 'Stone',\n        symbol: 'st',\n        factor: 6.35029\n      },\n      ton: {\n        name: 'Ton (US)',\n        symbol: 'ton',\n        factor: 907.185\n      },\n      carat: {\n        name: 'Carat',\n        symbol: 'ct',\n        factor: 0.0002\n      },\n      grain: {\n        name: 'Grain',\n        symbol: 'gr',\n        factor: 0.0000648\n      }\n    }\n  },\n  temperature: {\n    name: 'Temperature',\n    units: {\n      celsius: {\n        name: 'Celsius',\n        symbol: '°C'\n      },\n      fahrenheit: {\n        name: 'Fahrenheit',\n        symbol: '°F'\n      },\n      kelvin: {\n        name: 'Kelvin',\n        symbol: 'K'\n      },\n      rankine: {\n        name: 'Rankine',\n        symbol: '°R'\n      }\n    }\n  },\n  volume: {\n    name: 'Volume',\n    units: {\n      liter: {\n        name: 'Liter',\n        symbol: 'L',\n        factor: 1\n      },\n      milliliter: {\n        name: 'Milliliter',\n        symbol: 'mL',\n        factor: 0.001\n      },\n      cubicMeter: {\n        name: 'Cubic Meter',\n        symbol: 'm³',\n        factor: 1000\n      },\n      cubicCentimeter: {\n        name: 'Cubic Centimeter',\n        symbol: 'cm³',\n        factor: 0.001\n      },\n      gallon: {\n        name: 'Gallon (US)',\n        symbol: 'gal',\n        factor: 3.78541\n      },\n      quart: {\n        name: 'Quart (US)',\n        symbol: 'qt',\n        factor: 0.946353\n      },\n      pint: {\n        name: 'Pint (US)',\n        symbol: 'pt',\n        factor: 0.473176\n      },\n      cup: {\n        name: 'Cup (US)',\n        symbol: 'cup',\n        factor: 0.236588\n      },\n      fluidOunce: {\n        name: 'Fluid Ounce (US)',\n        symbol: 'fl oz',\n        factor: 0.0295735\n      },\n      tablespoon: {\n        name: 'Tablespoon',\n        symbol: 'tbsp',\n        factor: 0.0147868\n      },\n      teaspoon: {\n        name: 'Teaspoon',\n        symbol: 'tsp',\n        factor: 0.00492892\n      },\n      imperialGallon: {\n        name: 'Gallon (Imperial)',\n        symbol: 'imp gal',\n        factor: 4.54609\n      },\n      barrel: {\n        name: 'Barrel (Oil)',\n        symbol: 'bbl',\n        factor: 158.987\n      }\n    }\n  },\n  area: {\n    name: 'Area',\n    units: {\n      squareMeter: {\n        name: 'Square Meter',\n        symbol: 'm²',\n        factor: 1\n      },\n      squareKilometer: {\n        name: 'Square Kilometer',\n        symbol: 'km²',\n        factor: 1000000\n      },\n      squareCentimeter: {\n        name: 'Square Centimeter',\n        symbol: 'cm²',\n        factor: 0.0001\n      },\n      squareMillimeter: {\n        name: 'Square Millimeter',\n        symbol: 'mm²',\n        factor: 0.000001\n      },\n      hectare: {\n        name: 'Hectare',\n        symbol: 'ha',\n        factor: 10000\n      },\n      acre: {\n        name: 'Acre',\n        symbol: 'ac',\n        factor: 4046.86\n      },\n      squareFoot: {\n        name: 'Square Foot',\n        symbol: 'ft²',\n        factor: 0.092903\n      },\n      squareInch: {\n        name: 'Square Inch',\n        symbol: 'in²',\n        factor: 0.00064516\n      },\n      squareYard: {\n        name: 'Square Yard',\n        symbol: 'yd²',\n        factor: 0.836127\n      },\n      squareMile: {\n        name: 'Square Mile',\n        symbol: 'mi²',\n        factor: 2589988.11\n      }\n    }\n  },\n  time: {\n    name: 'Time',\n    units: {\n      second: {\n        name: 'Second',\n        symbol: 's',\n        factor: 1\n      },\n      millisecond: {\n        name: 'Millisecond',\n        symbol: 'ms',\n        factor: 0.001\n      },\n      microsecond: {\n        name: 'Microsecond',\n        symbol: 'μs',\n        factor: 0.000001\n      },\n      nanosecond: {\n        name: 'Nanosecond',\n        symbol: 'ns',\n        factor: 0.000000001\n      },\n      minute: {\n        name: 'Minute',\n        symbol: 'min',\n        factor: 60\n      },\n      hour: {\n        name: 'Hour',\n        symbol: 'h',\n        factor: 3600\n      },\n      day: {\n        name: 'Day',\n        symbol: 'd',\n        factor: 86400\n      },\n      week: {\n        name: 'Week',\n        symbol: 'wk',\n        factor: 604800\n      },\n      month: {\n        name: 'Month',\n        symbol: 'mo',\n        factor: 2629746\n      },\n      year: {\n        name: 'Year',\n        symbol: 'yr',\n        factor: 31556952\n      },\n      decade: {\n        name: 'Decade',\n        symbol: 'dec',\n        factor: 315569520\n      },\n      century: {\n        name: 'Century',\n        symbol: 'c',\n        factor: 3155695200\n      }\n    }\n  },\n  speed: {\n    name: 'Speed',\n    units: {\n      meterPerSecond: {\n        name: 'Meter per Second',\n        symbol: 'm/s',\n        factor: 1\n      },\n      kilometerPerHour: {\n        name: 'Kilometer per Hour',\n        symbol: 'km/h',\n        factor: 0.277778\n      },\n      milePerHour: {\n        name: 'Mile per Hour',\n        symbol: 'mph',\n        factor: 0.44704\n      },\n      footPerSecond: {\n        name: 'Foot per Second',\n        symbol: 'ft/s',\n        factor: 0.3048\n      },\n      knot: {\n        name: 'Knot',\n        symbol: 'kn',\n        factor: 0.514444\n      },\n      mach: {\n        name: 'Mach',\n        symbol: 'Ma',\n        factor: 343\n      },\n      speedOfLight: {\n        name: 'Speed of Light',\n        symbol: 'c',\n        factor: 299792458\n      }\n    }\n  },\n  pressure: {\n    name: 'Pressure',\n    units: {\n      pascal: {\n        name: 'Pascal',\n        symbol: 'Pa',\n        factor: 1\n      },\n      kilopascal: {\n        name: 'Kilopascal',\n        symbol: 'kPa',\n        factor: 1000\n      },\n      megapascal: {\n        name: 'Megapascal',\n        symbol: 'MPa',\n        factor: 1000000\n      },\n      bar: {\n        name: 'Bar',\n        symbol: 'bar',\n        factor: 100000\n      },\n      millibar: {\n        name: 'Millibar',\n        symbol: 'mbar',\n        factor: 100\n      },\n      atmosphere: {\n        name: 'Atmosphere',\n        symbol: 'atm',\n        factor: 101325\n      },\n      psi: {\n        name: 'PSI',\n        symbol: 'psi',\n        factor: 6894.76\n      },\n      torr: {\n        name: 'Torr',\n        symbol: 'Torr',\n        factor: 133.322\n      },\n      mmHg: {\n        name: 'mmHg',\n        symbol: 'mmHg',\n        factor: 133.322\n      }\n    }\n  },\n  energy: {\n    name: 'Energy',\n    units: {\n      joule: {\n        name: 'Joule',\n        symbol: 'J',\n        factor: 1\n      },\n      kilojoule: {\n        name: 'Kilojoule',\n        symbol: 'kJ',\n        factor: 1000\n      },\n      calorie: {\n        name: 'Calorie',\n        symbol: 'cal',\n        factor: 4.184\n      },\n      kilocalorie: {\n        name: 'Kilocalorie',\n        symbol: 'kcal',\n        factor: 4184\n      },\n      wattHour: {\n        name: 'Watt Hour',\n        symbol: 'Wh',\n        factor: 3600\n      },\n      kilowattHour: {\n        name: 'Kilowatt Hour',\n        symbol: 'kWh',\n        factor: 3600000\n      },\n      btu: {\n        name: 'BTU',\n        symbol: 'BTU',\n        factor: 1055.06\n      },\n      therm: {\n        name: 'Therm',\n        symbol: 'thm',\n        factor: 105506000\n      },\n      footPound: {\n        name: 'Foot-Pound',\n        symbol: 'ft⋅lb',\n        factor: 1.35582\n      },\n      electronVolt: {\n        name: 'Electron Volt',\n        symbol: 'eV',\n        factor: 1.602e-19\n      }\n    }\n  },\n  power: {\n    name: 'Power',\n    units: {\n      watt: {\n        name: 'Watt',\n        symbol: 'W',\n        factor: 1\n      },\n      kilowatt: {\n        name: 'Kilowatt',\n        symbol: 'kW',\n        factor: 1000\n      },\n      megawatt: {\n        name: 'Megawatt',\n        symbol: 'MW',\n        factor: 1000000\n      },\n      horsepower: {\n        name: 'Horsepower',\n        symbol: 'hp',\n        factor: 745.7\n      },\n      btuPerHour: {\n        name: 'BTU per Hour',\n        symbol: 'BTU/h',\n        factor: 0.293071\n      },\n      caloriePerSecond: {\n        name: 'Calorie per Second',\n        symbol: 'cal/s',\n        factor: 4.184\n      }\n    }\n  },\n  angle: {\n    name: 'Angle',\n    units: {\n      degree: {\n        name: 'Degree',\n        symbol: '°',\n        factor: 1\n      },\n      radian: {\n        name: 'Radian',\n        symbol: 'rad',\n        factor: 57.2958\n      },\n      gradian: {\n        name: 'Gradian',\n        symbol: 'grad',\n        factor: 0.9\n      },\n      turn: {\n        name: 'Turn',\n        symbol: 'turn',\n        factor: 360\n      },\n      arcminute: {\n        name: 'Arcminute',\n        symbol: \"'\",\n        factor: 0.0166667\n      },\n      arcsecond: {\n        name: 'Arcsecond',\n        symbol: '\"',\n        factor: 0.000277778\n      }\n    }\n  },\n  frequency: {\n    name: 'Frequency',\n    units: {\n      hertz: {\n        name: 'Hertz',\n        symbol: 'Hz',\n        factor: 1\n      },\n      kilohertz: {\n        name: 'Kilohertz',\n        symbol: 'kHz',\n        factor: 1000\n      },\n      megahertz: {\n        name: 'Megahertz',\n        symbol: 'MHz',\n        factor: 1000000\n      },\n      gigahertz: {\n        name: 'Gigahertz',\n        symbol: 'GHz',\n        factor: 1000000000\n      },\n      rpm: {\n        name: 'RPM',\n        symbol: 'rpm',\n        factor: 0.0166667\n      }\n    }\n  }\n};\nexport function convertUnits(value, fromUnit, toUnit, category) {\n  var _categoryData$units$f, _categoryData$units$t;\n  if (category === 'temperature') {\n    return convertTemperature(value, fromUnit, toUnit);\n  }\n  const categoryData = unitCategories[category];\n  if (!categoryData) return value;\n  const fromFactor = (_categoryData$units$f = categoryData.units[fromUnit]) === null || _categoryData$units$f === void 0 ? void 0 : _categoryData$units$f.factor;\n  const toFactor = (_categoryData$units$t = categoryData.units[toUnit]) === null || _categoryData$units$t === void 0 ? void 0 : _categoryData$units$t.factor;\n  if (!fromFactor || !toFactor) return value;\n  return value * fromFactor / toFactor;\n}\nfunction convertTemperature(value, fromUnit, toUnit) {\n  let celsius;\n  switch (fromUnit) {\n    case 'celsius':\n      celsius = value;\n      break;\n    case 'fahrenheit':\n      celsius = (value - 32) * 5 / 9;\n      break;\n    case 'kelvin':\n      celsius = value - 273.15;\n      break;\n    case 'rankine':\n      celsius = (value - 491.67) * 5 / 9;\n      break;\n    default:\n      return value;\n  }\n  switch (toUnit) {\n    case 'celsius':\n      return celsius;\n    case 'fahrenheit':\n      return celsius * 9 / 5 + 32;\n    case 'kelvin':\n      return celsius + 273.15;\n    case 'rankine':\n      return celsius * 9 / 5 + 491.67;\n    default:\n      return value;\n  }\n}","map":{"version":3,"names":["unitCategories","length","name","units","meter","symbol","factor","kilometer","centimeter","millimeter","micrometer","nanometer","inch","foot","yard","mile","nauticalMile","angstrom","lightYear","parsec","mass","kilogram","gram","milligram","microgram","tonne","pound","ounce","stone","ton","carat","grain","temperature","celsius","fahrenheit","kelvin","rankine","volume","liter","milliliter","cubicMeter","cubicCentimeter","gallon","quart","pint","cup","fluidOunce","tablespoon","teaspoon","imperialGallon","barrel","area","squareMeter","squareKilometer","squareCentimeter","squareMillimeter","hectare","acre","squareFoot","squareInch","squareYard","squareMile","time","second","millisecond","microsecond","nanosecond","minute","hour","day","week","month","year","decade","century","speed","meterPerSecond","kilometerPerHour","milePerHour","footPerSecond","knot","mach","speedOfLight","pressure","pascal","kilopascal","megapascal","bar","millibar","atmosphere","psi","torr","mmHg","energy","joule","kilojoule","calorie","kilocalorie","wattHour","kilowattHour","btu","therm","footPound","electronVolt","power","watt","kilowatt","megawatt","horsepower","btuPerHour","caloriePerSecond","angle","degree","radian","gradian","turn","arcminute","arcsecond","frequency","hertz","kilohertz","megahertz","gigahertz","rpm","convertUnits","value","fromUnit","toUnit","category","_categoryData$units$f","_categoryData$units$t","convertTemperature","categoryData","fromFactor","toFactor"],"sources":["D:/My Stuff/UnitCOnverter/src/units.js"],"sourcesContent":["export const unitCategories = {\n  length: {\n    name: 'Length',\n    units: {\n      meter: { name: 'Meter', symbol: 'm', factor: 1 },\n      kilometer: { name: 'Kilometer', symbol: 'km', factor: 1000 },\n      centimeter: { name: 'Centimeter', symbol: 'cm', factor: 0.01 },\n      millimeter: { name: 'Millimeter', symbol: 'mm', factor: 0.001 },\n      micrometer: { name: 'Micrometer', symbol: 'μm', factor: 0.000001 },\n      nanometer: { name: 'Nanometer', symbol: 'nm', factor: 0.000000001 },\n      inch: { name: 'Inch', symbol: 'in', factor: 0.0254 },\n      foot: { name: 'Foot', symbol: 'ft', factor: 0.3048 },\n      yard: { name: 'Yard', symbol: 'yd', factor: 0.9144 },\n      mile: { name: 'Mile', symbol: 'mi', factor: 1609.344 },\n      nauticalMile: { name: 'Nautical Mile', symbol: 'nmi', factor: 1852 },\n      angstrom: { name: 'Angstrom', symbol: 'Å', factor: 0.0000000001 },\n      lightYear: { name: 'Light Year', symbol: 'ly', factor: 9.461e15 },\n      parsec: { name: 'Parsec', symbol: 'pc', factor: 3.086e16 }\n    }\n  },\n  \n  mass: {\n    name: 'Mass/Weight',\n    units: {\n      kilogram: { name: 'Kilogram', symbol: 'kg', factor: 1 },\n      gram: { name: 'Gram', symbol: 'g', factor: 0.001 },\n      milligram: { name: 'Milligram', symbol: 'mg', factor: 0.000001 },\n      microgram: { name: 'Microgram', symbol: 'μg', factor: 0.000000001 },\n      tonne: { name: 'Tonne', symbol: 't', factor: 1000 },\n      pound: { name: 'Pound', symbol: 'lb', factor: 0.453592 },\n      ounce: { name: 'Ounce', symbol: 'oz', factor: 0.0283495 },\n      stone: { name: 'Stone', symbol: 'st', factor: 6.35029 },\n      ton: { name: 'Ton (US)', symbol: 'ton', factor: 907.185 },\n      carat: { name: 'Carat', symbol: 'ct', factor: 0.0002 },\n      grain: { name: 'Grain', symbol: 'gr', factor: 0.0000648 }\n    }\n  },\n\n  temperature: {\n    name: 'Temperature',\n    units: {\n      celsius: { name: 'Celsius', symbol: '°C' },\n      fahrenheit: { name: 'Fahrenheit', symbol: '°F' },\n      kelvin: { name: 'Kelvin', symbol: 'K' },\n      rankine: { name: 'Rankine', symbol: '°R' }\n    }\n  },\n\n  volume: {\n    name: 'Volume',\n    units: {\n      liter: { name: 'Liter', symbol: 'L', factor: 1 },\n      milliliter: { name: 'Milliliter', symbol: 'mL', factor: 0.001 },\n      cubicMeter: { name: 'Cubic Meter', symbol: 'm³', factor: 1000 },\n      cubicCentimeter: { name: 'Cubic Centimeter', symbol: 'cm³', factor: 0.001 },\n      gallon: { name: 'Gallon (US)', symbol: 'gal', factor: 3.78541 },\n      quart: { name: 'Quart (US)', symbol: 'qt', factor: 0.946353 },\n      pint: { name: 'Pint (US)', symbol: 'pt', factor: 0.473176 },\n      cup: { name: 'Cup (US)', symbol: 'cup', factor: 0.236588 },\n      fluidOunce: { name: 'Fluid Ounce (US)', symbol: 'fl oz', factor: 0.0295735 },\n      tablespoon: { name: 'Tablespoon', symbol: 'tbsp', factor: 0.0147868 },\n      teaspoon: { name: 'Teaspoon', symbol: 'tsp', factor: 0.00492892 },\n      imperialGallon: { name: 'Gallon (Imperial)', symbol: 'imp gal', factor: 4.54609 },\n      barrel: { name: 'Barrel (Oil)', symbol: 'bbl', factor: 158.987 }\n    }\n  },\n\n  area: {\n    name: 'Area',\n    units: {\n      squareMeter: { name: 'Square Meter', symbol: 'm²', factor: 1 },\n      squareKilometer: { name: 'Square Kilometer', symbol: 'km²', factor: 1000000 },\n      squareCentimeter: { name: 'Square Centimeter', symbol: 'cm²', factor: 0.0001 },\n      squareMillimeter: { name: 'Square Millimeter', symbol: 'mm²', factor: 0.000001 },\n      hectare: { name: 'Hectare', symbol: 'ha', factor: 10000 },\n      acre: { name: 'Acre', symbol: 'ac', factor: 4046.86 },\n      squareFoot: { name: 'Square Foot', symbol: 'ft²', factor: 0.092903 },\n      squareInch: { name: 'Square Inch', symbol: 'in²', factor: 0.00064516 },\n      squareYard: { name: 'Square Yard', symbol: 'yd²', factor: 0.836127 },\n      squareMile: { name: 'Square Mile', symbol: 'mi²', factor: 2589988.11 }\n    }\n  },\n\n  time: {\n    name: 'Time',\n    units: {\n      second: { name: 'Second', symbol: 's', factor: 1 },\n      millisecond: { name: 'Millisecond', symbol: 'ms', factor: 0.001 },\n      microsecond: { name: 'Microsecond', symbol: 'μs', factor: 0.000001 },\n      nanosecond: { name: 'Nanosecond', symbol: 'ns', factor: 0.000000001 },\n      minute: { name: 'Minute', symbol: 'min', factor: 60 },\n      hour: { name: 'Hour', symbol: 'h', factor: 3600 },\n      day: { name: 'Day', symbol: 'd', factor: 86400 },\n      week: { name: 'Week', symbol: 'wk', factor: 604800 },\n      month: { name: 'Month', symbol: 'mo', factor: 2629746 },\n      year: { name: 'Year', symbol: 'yr', factor: 31556952 },\n      decade: { name: 'Decade', symbol: 'dec', factor: 315569520 },\n      century: { name: 'Century', symbol: 'c', factor: 3155695200 }\n    }\n  },\n\n  speed: {\n    name: 'Speed',\n    units: {\n      meterPerSecond: { name: 'Meter per Second', symbol: 'm/s', factor: 1 },\n      kilometerPerHour: { name: 'Kilometer per Hour', symbol: 'km/h', factor: 0.277778 },\n      milePerHour: { name: 'Mile per Hour', symbol: 'mph', factor: 0.44704 },\n      footPerSecond: { name: 'Foot per Second', symbol: 'ft/s', factor: 0.3048 },\n      knot: { name: 'Knot', symbol: 'kn', factor: 0.514444 },\n      mach: { name: 'Mach', symbol: 'Ma', factor: 343 },\n      speedOfLight: { name: 'Speed of Light', symbol: 'c', factor: 299792458 }\n    }\n  },\n\n  pressure: {\n    name: 'Pressure',\n    units: {\n      pascal: { name: 'Pascal', symbol: 'Pa', factor: 1 },\n      kilopascal: { name: 'Kilopascal', symbol: 'kPa', factor: 1000 },\n      megapascal: { name: 'Megapascal', symbol: 'MPa', factor: 1000000 },\n      bar: { name: 'Bar', symbol: 'bar', factor: 100000 },\n      millibar: { name: 'Millibar', symbol: 'mbar', factor: 100 },\n      atmosphere: { name: 'Atmosphere', symbol: 'atm', factor: 101325 },\n      psi: { name: 'PSI', symbol: 'psi', factor: 6894.76 },\n      torr: { name: 'Torr', symbol: 'Torr', factor: 133.322 },\n      mmHg: { name: 'mmHg', symbol: 'mmHg', factor: 133.322 }\n    }\n  },\n\n  energy: {\n    name: 'Energy',\n    units: {\n      joule: { name: 'Joule', symbol: 'J', factor: 1 },\n      kilojoule: { name: 'Kilojoule', symbol: 'kJ', factor: 1000 },\n      calorie: { name: 'Calorie', symbol: 'cal', factor: 4.184 },\n      kilocalorie: { name: 'Kilocalorie', symbol: 'kcal', factor: 4184 },\n      wattHour: { name: 'Watt Hour', symbol: 'Wh', factor: 3600 },\n      kilowattHour: { name: 'Kilowatt Hour', symbol: 'kWh', factor: 3600000 },\n      btu: { name: 'BTU', symbol: 'BTU', factor: 1055.06 },\n      therm: { name: 'Therm', symbol: 'thm', factor: 105506000 },\n      footPound: { name: 'Foot-Pound', symbol: 'ft⋅lb', factor: 1.35582 },\n      electronVolt: { name: 'Electron Volt', symbol: 'eV', factor: 1.602e-19 }\n    }\n  },\n\n  power: {\n    name: 'Power',\n    units: {\n      watt: { name: 'Watt', symbol: 'W', factor: 1 },\n      kilowatt: { name: 'Kilowatt', symbol: 'kW', factor: 1000 },\n      megawatt: { name: 'Megawatt', symbol: 'MW', factor: 1000000 },\n      horsepower: { name: 'Horsepower', symbol: 'hp', factor: 745.7 },\n      btuPerHour: { name: 'BTU per Hour', symbol: 'BTU/h', factor: 0.293071 },\n      caloriePerSecond: { name: 'Calorie per Second', symbol: 'cal/s', factor: 4.184 }\n    }\n  },\n\n  angle: {\n    name: 'Angle',\n    units: {\n      degree: { name: 'Degree', symbol: '°', factor: 1 },\n      radian: { name: 'Radian', symbol: 'rad', factor: 57.2958 },\n      gradian: { name: 'Gradian', symbol: 'grad', factor: 0.9 },\n      turn: { name: 'Turn', symbol: 'turn', factor: 360 },\n      arcminute: { name: 'Arcminute', symbol: \"'\", factor: 0.0166667 },\n      arcsecond: { name: 'Arcsecond', symbol: '\"', factor: 0.000277778 }\n    }\n  },\n\n  frequency: {\n    name: 'Frequency',\n    units: {\n      hertz: { name: 'Hertz', symbol: 'Hz', factor: 1 },\n      kilohertz: { name: 'Kilohertz', symbol: 'kHz', factor: 1000 },\n      megahertz: { name: 'Megahertz', symbol: 'MHz', factor: 1000000 },\n      gigahertz: { name: 'Gigahertz', symbol: 'GHz', factor: 1000000000 },\n      rpm: { name: 'RPM', symbol: 'rpm', factor: 0.0166667 }\n    }\n  }\n};\n\nexport function convertUnits(value, fromUnit, toUnit, category) {\n  if (category === 'temperature') {\n    return convertTemperature(value, fromUnit, toUnit);\n  }\n  \n  const categoryData = unitCategories[category];\n  if (!categoryData) return value;\n  \n  const fromFactor = categoryData.units[fromUnit]?.factor;\n  const toFactor = categoryData.units[toUnit]?.factor;\n  \n  if (!fromFactor || !toFactor) return value;\n  \n  return (value * fromFactor) / toFactor;\n}\n\nfunction convertTemperature(value, fromUnit, toUnit) {\n  let celsius;\n  \n  switch (fromUnit) {\n    case 'celsius':\n      celsius = value;\n      break;\n    case 'fahrenheit':\n      celsius = (value - 32) * 5/9;\n      break;\n    case 'kelvin':\n      celsius = value - 273.15;\n      break;\n    case 'rankine':\n      celsius = (value - 491.67) * 5/9;\n      break;\n    default:\n      return value;\n  }\n  \n  switch (toUnit) {\n    case 'celsius':\n      return celsius;\n    case 'fahrenheit':\n      return celsius * 9/5 + 32;\n    case 'kelvin':\n      return celsius + 273.15;\n    case 'rankine':\n      return celsius * 9/5 + 491.67;\n    default:\n      return value;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}